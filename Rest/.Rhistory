rsconnect::setAccountInfo(name='yspanimal-free',
token='82710C016F0D344031146A15973EC36D',
secret='JdhMsH2DN3OCjoxthI8+75hp/5WpvE4+WFlQaFsw')
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages("library(rPython)
# Load/run the main Python script
python.load("GetNewRedditSubmissions.py")
# Get the variable
new_subs_data <- python.get("new_subs")
# Load/run re-fecth script
python.load("RefreshNewSubs.py")
# Get the updated variable
new_subs_data <- python.get("new_subs")
head(new_subs_data)")
install.packages("rPython")
library(ggplot2)
library(data.table)
library(dplyr)
setwd("C:/R_repositories/OthersData/Kaggle/Rest")
destFile <- "1-restaurant-test.csv"
if (file.exists(destFile)){
ResReviewData <- fread(destFile)
}
setwd("C:/R_repositories/Kaggle/Rest")
destFile <- "1-restaurant-test.csv"
if (file.exists(destFile)){
ResReviewData <- fread(destFile)
}
setwd("C:/R_repositories/Kaggle/Rest")
destFile <- "1-restaurant-train.csv"
if (file.exists(destFile)){
ResReviewDataTrain <- fread(destFile)
}
?fread
setwd("C:/R_repositories/Kaggle/Rest")
destFile <- "1-restaurant-train.csv"
if (file.exists(destFile)){
ResReviewDataTrain <- read.csv(destFile)
}
ResReviewDataTrain <- read.csv(destFile, col.names = c("1","2","3"))
ResReviewDataTrain <- read.csv(destFile, header = F, col.names = c("1","2","3"))
ResReviewDataTrain <- read.csv(destFile, header = F, col.names = c("1","2","3", "4"))
ResReviewDataTrain <- fread(destFile, header = F)
ResReviewDataTrain <- fread(destFile, sep= "?", header = FALSE)
ResReviewDataTrain <- readLines(destFile)
head(ResReviewDataTrain)
ResReviewDataTrain1 <- fread(destFile, sep= "?", header = FALSE)
ResReviewDataTrain1 <- fread(destFile)
ResReviewDataTrain1 <- fread(destFile, nrows = 36024)
View(ResReviewDataTrain1)
ResReviewDataTrain1 %>% mutate(review = ifelse(V1>=4, 1, 0))
ResReviewDataTrain1 <- mutate(review = ifelse(V1>=4, 1, 0))
ResReviewDataTrain1 <- mutate(ResReviewDataTrain1, review = ifelse(V1>=4, 1, 0))
View(ResReviewDataTrain1)
ResReviewDataTrain1 <- mutate(ResReviewDataTrain1, review = ifelse(V1>=4, 1, 0)) %>% select(- V1)
View(ResReviewDataTrain1)
ResReviewDataTrainPos <- select(ResReviewDataTrainPos, review = 1)
ResReviewDataTrainNeg <- select(ResReviewDataTrainPos, review = 0)
ResReviewDataTrainPos <- select(ResReviewDataTrain1, review = 1)
ResReviewDataTrainNeg <- select(ResReviewDataTrain1, review = 0)
View(ResReviewDataTrainPos)
View(ResReviewDataTrain1)
str(ResReviewDataTrain1)
ResReviewDataTrainPos <- filter(ResReviewDataTrain1, review = 1)
ResReviewDataTrainNeg <- filter(ResReviewDataTrain1, review = 0)
ResReviewDataTrainPos <- filter(ResReviewDataTrain1, review == 1)
ResReviewDataTrainNeg <- filter(ResReviewDataTrain1, review == 0)
View(ResReviewDataTrainNeg)
View(ResReviewDataTrainPos)
View(ResReviewDataTrain1)
library(ggplot2)
library(data.table)
library(dplyr)
library(tm)
require(tm)
setwd("C:/R_repositories/Kaggle/Rest")
destFile <- "1-restaurant-train.csv"
if (file.exists(destFile)){
#ResReviewDataTrain <- readLines(destFile)#fread(destFile, sep= "?", header = FALSE)
ResReviewDataTrain <- fread(destFile, nrows = 36024)#, sep= "?", header = FALSE)
#ResReviewDataTrain2 <- fread(destFile, sep= "?", header = FALSE)
}
ResReviewDataTrain <- mutate(ResReviewDataTrain1, review = ifelse(V1>=4, 1, 0)) %>% select(- V1)
DataTrainPos <- filter(ResReviewDataTrain1, review == 1)
DataTrainNeg <- filter(ResReviewDataTrain1, review == 0)
View(ResReviewDataTrain)
ResReviewDataTrain <- mutate(ResReviewDataTrain1, review = ifelse(V1>=4, 1, 0)) %>% select(- V1)
ResReviewDataTrain <- mutate(ResReviewDataTrain, review = ifelse(V1>=4, 1, 0)) %>% select(- V1)
library(ggplot2)
library(data.table)
library(dplyr)
library(tm)
require(tm)
setwd("C:/R_repositories/Kaggle/Rest")
destFile <- "1-restaurant-train.csv"
if (file.exists(destFile)){
#ResReviewDataTrain <- readLines(destFile)#fread(destFile, sep= "?", header = FALSE)
ResReviewDataTrain <- fread(destFile, nrows = 36024)#, sep= "?", header = FALSE)
#ResReviewDataTrain2 <- fread(destFile, sep= "?", header = FALSE)
}
ResReviewDataTrain <- mutate(ResReviewDataTrain, review = ifelse(V1>=4, 1, 0)) %>% select(- V1)
DataTrainPos <- filter(ResReviewDataTrain1, review == 1)
DataTrainNeg <- filter(ResReviewDataTrain1, review == 0)
library(ggplot2)
library(data.table)
library(dplyr)
library(tm)
require(tm)
setwd("C:/R_repositories/Kaggle/Rest")
destFile <- "1-restaurant-train.csv"
if (file.exists(destFile)){
#ResReviewDataTrain <- readLines(destFile)#fread(destFile, sep= "?", header = FALSE)
ResReviewDataTrain <- fread(destFile, nrows = 36024)#, sep= "?", header = FALSE)
#ResReviewDataTrain2 <- fread(destFile, sep= "?", header = FALSE)
}
ResReviewDataTrain <- mutate(ResReviewDataTrain, review = ifelse(V1>=4, 1, 0)) %>% select(- V1)
DataTrainPos <- filter(ResReviewDataTrain, review == 1)
DataTrainNeg <- filter(ResReviewDataTrain, review == 0)
tm_map(DataTrainPos$V2, asPlain)
tm_map(DataTrainNeg$V2, asPlain)
Pos.vec <- VectorSource(DataTrainPos$V2)
Pos.vec <- VectorSource(DataTrainPos$V2)
Pos.cor <- Corpus(Pos.vec)
library(ggplot2)
library(data.table)
library(dplyr)
library(tm)
setwd("C:/R_repositories/Kaggle/Rest")
destFile <- "1-restaurant-train.csv"
if (file.exists(destFile)){
#ResReviewDataTrain <- readLines(destFile)#fread(destFile, sep= "?", header = FALSE)
ResReviewDataTrain <- fread(destFile, nrows = 36024)#, sep= "?", header = FALSE)
#ResReviewDataTrain2 <- fread(destFile, sep= "?", header = FALSE)
}
ResReviewDataTrain <- mutate(ResReviewDataTrain, review = ifelse(V1>=4, 1, 0)) %>% select(- V1)
DataTrainPos <- filter(ResReviewDataTrain, review == 1)
DataTrainNeg <- filter(ResReviewDataTrain, review == 0)
Pos.vec <- VectorSource(DataTrainPos$V2) %>% Corpus(Pos.vec)
Pos.vec <- VectorSource(DataTrainPos$V2) %>% Corpus()
Pos.cor <- VectorSource(DataTrainPos$V2) %>% Corpus()
Pos.cor <- tm_map(Pos.cor, content_transformer(tolower))
Pos.cor <- tm_map(Pos.cor, removePunctuation)
Pos.cor <- tm_map(Pos.cor, removeNumbers)
Pos.cor <- tm_map(Pos.cor, removeNumbers)
Pos.cor <- c(stopwords("english"))
Pos.cor <- tm_map(Pos.cor, removeWords, Beerstopwords)
Pos.cor <- tm_map(Pos.cor, stripWhitespace)
DTM <- DocumentTermMatrix(Pos.cor)
library(ggplot2)
library(data.table)
library(dplyr)
library(tm)
setwd("C:/R_repositories/Kaggle/Rest")
destFile <- "1-restaurant-train.csv"
if (file.exists(destFile)){
#ResReviewDataTrain <- readLines(destFile)#fread(destFile, sep= "?", header = FALSE)
ResReviewDataTrain <- fread(destFile, nrows = 36024)#, sep= "?", header = FALSE)
#ResReviewDataTrain2 <- fread(destFile, sep= "?", header = FALSE)
}
ResReviewDataTrain <- mutate(ResReviewDataTrain, review = ifelse(V1>=4, 1, 0)) %>% select(- V1)
DataTrainPos <- filter(ResReviewDataTrain, review == 1)
DataTrainNeg <- filter(ResReviewDataTrain, review == 0)
Pos.cor <- VectorSource(DataTrainPos$V2) %>% Corpus()
Pos.cor <- tm_map(Pos.cor, content_transformer(tolower))
Pos.cor <- tm_map(Pos.cor, removePunctuation)
Pos.cor <- tm_map(Pos.cor, removeNumbers)
Pos.cor <- tm_map(Pos.cor, removeNumbers)
StopWords <- c(stopwords("english"))
Pos.cor <- tm_map(Pos.cor, removeWords, StopWords)
Pos.cor <- tm_map(Pos.cor, stripWhitespace)
DTM <- DocumentTermMatrix(Pos.cor)
inspect(DTM)
DTM_Mat <- as.matrix(DTM)
DTM1 <-TermDocumentMatrix(Pos.cor)
inspect(DTM1)
DTM
library(slam)
ph.DTM3 <- rollup(DTM, 2, na.rm=TRUE, FUN = sum)
inspect(DTM1)
inspect(DTM)
as.matrix(DTM)
inspect(DTM[1:5,900:905])
library(ggplot2)
library(data.table)
library(dplyr)
library(tm)
library(slam)
setwd("C:/R_repositories/Kaggle/Rest")
destFile <- "1-restaurant-train.csv"
if (file.exists(destFile)){
#ResReviewDataTrain <- readLines(destFile)#fread(destFile, sep= "?", header = FALSE)
ResReviewDataTrain <- fread(destFile, nrows = 36024)#, sep= "?", header = FALSE)
#ResReviewDataTrain2 <- fread(destFile, sep= "?", header = FALSE)
}
ResReviewDataTrain <- mutate(ResReviewDataTrain, review = ifelse(V1>=4, 1, 0)) %>% select(- V1)
DataTrainPos <- filter(ResReviewDataTrain, review == 1)
DataTrainNeg <- filter(ResReviewDataTrain, review == 0)
Pos.cor <- VectorSource(DataTrainPos$V2) %>% Corpus()
Pos.cor <- tm_map(Pos.cor, content_transformer(tolower))
Pos.cor <- tm_map(Pos.cor, removePunctuation)
Pos.cor <- tm_map(Pos.cor, removeNumbers)
Pos.cor <- tm_map(Pos.cor, removeNumbers)
#StopWords <- c(stopwords("english"))
Pos.cor <- tm_map(Pos.cor, removeWords, stopwords("english"))
#Pos.cor <- tm_map(Pos.cor, stripWhitespace)
DTM <- DocumentTermMatrix(Pos.cor)
inspect(DTM[1:5,900:905])
View(DataTrainPos)
dim(DTM)
inspect(DTM[1:5,1900:1905])
inspect(DTM[1:5,19000:19005])
DTM <- TermDocumentMatrix(Pos.cor)
inspect(DTM[1:5,19000:19005])
inspect(DTM[19000:19005, 1:5])
DTM <- DocumentTermMatrix(Pos.cor)
NewDTM <- removeSparseTerms(ProjectDTM, 0.98)
NewDTM <- removeSparseTerms(DTM, 0.98)
dim(NewDTM)
inspect(NewDTM[19000:19005, 1:5])
inspect(NewDTM[1:5, 19000:19005])
inspect(NewDTM)
ProjectFrequency <- colSums(as.matrix(NewDTM))
DTM_Mat <- as.matrix(DTM)
DTM_Mat <- as.matrix(NewDTM)
View(DTM_Mat)
DTM_v <- sort(colSums(DTM_Mat),decreasing=TRUE)
DTM_d <- data.frame(word = names(DTM_v),freq=DTM_v)
View(DTM_d)
table(DTM_d$freq)
DTM_v
##https://inclass.kaggle.com/c/restaurant-reviews
library(ggplot2)
library(data.table)
library(dplyr)
library(tm)
library(slam)
setwd("C:/R_repositories/Kaggle/Rest")
destFile <- "1-restaurant-train.csv"
if (file.exists(destFile)){
#ResReviewDataTrain <- readLines(destFile)#fread(destFile, sep= "?", header = FALSE)
ResReviewDataTrain <- fread(destFile, nrows = 36024)#, sep= "?", header = FALSE)
#ResReviewDataTrain2 <- fread(destFile, sep= "?", header = FALSE)
}
ResReviewDataTrain <- mutate(ResReviewDataTrain, review = ifelse(V1>=4, 1, 0)) %>% select(- V1)
DataTrainPos <- filter(ResReviewDataTrain, review == 1)
DataTrainNeg <- filter(ResReviewDataTrain, review == 0)
Pos.cor <- VectorSource(DataTrainPos$V2) %>% Corpus()
Pos.cor <- tm_map(Pos.cor, content_transformer(tolower))
Pos.cor <- tm_map(Pos.cor, removePunctuation)
Pos.cor <- tm_map(Pos.cor, removeNumbers)
#StopWords <- c(stopwords("english"))
Pos.cor <- tm_map(Pos.cor, removeWords, stopwords("english"))
#Pos.cor <- tm_map(Pos.cor, stripWhitespace)
DTMPos <- DocumentTermMatrix(Pos.cor)
DTMPos <- removeSparseTerms(DTMPos, 0.98)
DTMPos_Mat <- as.matrix(DTMPos)
DTMPos_v <- sort(colSums(DTMPos_Mat),decreasing=TRUE)
DTMPos_d <- data.frame(word = names(DTMPos_v),freq=DTMPos_v)
table(DTMPos_d$freq)
Neg.cor <- VectorSource(DataTrainNeg$V2) %>% Corpus()
Neg.cor <- tm_map(Neg.cor, content_transformer(tolower))
Neg.cor <- tm_map(Neg.cor, removePunctuation)
Neg.cor <- tm_map(Neg.cor, removeNumbers)
#StopWords <- c(stopwords("english"))
Neg.cor <- tm_map(Neg.cor, removeWords, stopwords("english"))
#Pos.cor <- tm_map(Pos.cor, stripWhitespace)
DTMNeg <- DocumentTermMatrix(Neg.cor)
DTMNeg <- removeSparseTerms(DTMNeg, 0.98)
DTMNeg_Mat <- as.matrix(DTMNeg)
DTMNeg_v <- sort(colSums(DTMNeg_Mat),decreasing=TRUE)
DTMNeg_d <- data.frame(word = names(DTMNeg_v),freq=DTMNeg_v)
table(DTMNeg_d$freq)
View(DTMPos_d)
View(DTMNeg_d)
View(DTMNeg_d)
